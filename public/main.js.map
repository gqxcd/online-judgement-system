{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\nconst routes: Routes = [\n  { path: 'problems', component: ProblemListComponent},\n  { path: 'problems/:id', component: ProblemDetailComponent},\n  { path: '**', redirectTo: 'problems'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { DataService } from './services/data.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n  ],\n  imports: [\n    NgbModule,\n    AppRoutingModule,\n    BrowserModule,\n    NgbModule.forRoot(),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXByb2JsZW0vbmV3LXByb2JsZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <form novalidate #form=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Difficulty:</label>\\n      <select class=\\\"custom-select\\\" name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option value=\\\"easy\\\"> Easy </option>\\n        <option value=\\\"medium\\\"> Medium </option>\\n        <option value=\\\"hard\\\"> Hard </option>\\n        <option value=\\\"super\\\"> Super </option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\"placeholder=\\\"Enter name here\\\"\\n            [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"desc\\\">Description:</label>\\n      <textarea row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"desc\\\" name=\\\"desc\\\" placeholder=\\\"Enter description here\\\"\\n                [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"addProblem()\\\" >Submit</button>\\n    <br>\\n    <br>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../model/problem';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM : Problem = Object.freeze({\n  id:0,\n  name:\"\",\n  desc:\"\",\n  difficulty:\"\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem\n  constructor(private dataService:DataService) { }\n\n  ngOnInit() {\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n  addProblem(){\n    console.log(\"New-problem Component: send problem: \" + JSON.stringify(this.newProblem));\n    this.dataService.addProblem(this.newProblem).subscribe(\n      problem => {\n        console.log(\"New-problem receive problem: \" + JSON.stringify(problem));\n      }\n    )\n    \n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1kZXRhaWwvcHJvYmxlbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\n    <h2>{{problem.id}} {{problem.name}} </h2>\\n    <p>{{problem.desc}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params} from'@angular/router';\nimport { Problem } from '../../model/problem';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem:Problem;\n  id:number;\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params)=>{\n      this.id = +params.id;\n      this.dataService.getProblemById(+params.id).subscribe(\n        problem => this.problem = problem\n      );\n    })\n  }\n\n}\n","module.exports = \".label {\\r\\n    color: white;\\r\\n    font: bold;\\r\\n    min-height: 27px;\\r\\n    min-width: 80px;\\r\\n    margin-right: 10px;\\r\\n    padding-top: 7px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.diff-easy {\\r\\n    background-color: #5CB85C;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.diff-hard{\\r\\n    background-color: #D9534F;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.diff-medium{\\r\\n    background-color: #F0AD4E;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.diff-super{\\r\\n    background-color: #990055;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGlCQUFpQjtDQUNwQjs7OztBQUlEO0lBQ0ksMEJBQTBCO0NBQzdCOzs7O0FBRUQ7SUFDSSwwQkFBMEI7O0NBRTdCOzs7O0FBRUQ7SUFDSSwwQkFBMEI7Q0FDN0I7Ozs7QUFFRDtJQUNJLDBCQUEwQjtDQUM3QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1saXN0L3Byb2JsZW0tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxhYmVsIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQ6IGJvbGQ7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgbWluLXdpZHRoOiA4MHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDdweDtcclxufVxyXG5cclxuXHJcblxyXG4uZGlmZi1lYXN5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1Q0I4NUM7XHJcbn1cclxuXHJcbi5kaWZmLWhhcmR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDk1MzRGO1xyXG5cclxufVxyXG5cclxuLmRpZmYtbWVkaXVte1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YwQUQ0RTtcclxufVxyXG5cclxuLmRpZmYtc3VwZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTkwMDU1O1xyXG59Il19 */\"","module.exports = \"<app-new-problem></app-new-problem>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"list-group\\\">\\n    <div class=\\\"list-group-item d-flex\\\" *ngFor=\\\"let problem of problems\\\" >\\n      <a> \\n        <span class=\\\"{{'badge badge-pill label diff-' + problem.difficulty.toLowerCase()}}\\\">{{problem.difficulty}}</span>\\n        <strong [routerLink]=\\\"['/problems', problem.id]\\\" >{{problem.id}}. {{problem.name}}</strong>  \\n      </a>\\n    </div>\\n  </div>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../model/problem\";\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems:Problem[];\n  constructor(private dataService : DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n\n  }\n  getProblems(){\n    this.dataService.getProblems().subscribe(\n      problems => this.problems = problems\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../model/problem';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  \n  problems:Problem[];\n  \n  constructor(private httpClient: HttpClient) {\n  }\n  \n  getProblems(){\n    return this.httpClient.get<Problem[]>('/api/v1/problems');\n  }\n  \n  getProblemById(id: number) {\n    return this.httpClient.get<Problem>('/api/v1/problems/'+id);\n  }\n  \n  addProblem(problem: Problem){\n    console.log(\"Data Service: receive problem: \" + JSON.stringify(problem));\n    const headers = new HttpHeaders();\n    headers.set(\"Content-Type\", \"application/json\"); \n    return this.httpClient.post<Problem>('/api/v1/problems/', problem, {headers:headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}